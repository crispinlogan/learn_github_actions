# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  issue_comment:
    types: [created, edited, deleted]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    #Â only for PR comments
    if: ${{ github.event.issue.pull_request }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: testt
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.3'
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Releases a new version
        if: contains(github.event.comment.body, 'TEST')   # check the comment if it contains the keywords
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          pwd
          ls
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git branch -a
          pip install bump2version==1.0.1
          bump2version patch
          git push
          version=$(git log --oneline | head -n1 |  awk '{print $NF}')
          git push origin v$version
      # - uses: khan/pull-request-comment-trigger@v1.1.0
      #   id: check
      #   with:
      #     trigger: 'release version patch'
      #     reaction: rocket
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      # - run: pip install bump2version==1.0.1
      # - run: bump2version patch # get increment type automatically
      # - run: git push # will need creds
      # - run: git push origin v0.1.1 # get tag name automatically